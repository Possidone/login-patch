{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass CadastroComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.emailExistente = false;\n    this.cadastroForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', Validators.required],\n      senhaConfirmacao: ['', Validators.required],\n      foto: ['']\n    });\n  }\n  cadastrarUsuario() {\n    if (this.cadastroForm.valid) {\n      this.cadastroForm.reset();\n    }\n  }\n  verificarEmailExistente() {}\n}\nCadastroComponent.ɵfac = function CadastroComponent_Factory(t) {\n  return new (t || CadastroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nCadastroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastroComponent,\n  selectors: [[\"app-cadastro\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"required\", \"\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"senha\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"senhaConfirmacao\", \"required\", \"\"], [\"type\", \"file\", \"formControlName\", \"foto\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function CadastroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Only Chat\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CadastroComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.cadastrarUsuario();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\");\n      i0.ɵɵtext(5, \"Nome:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n      i0.ɵɵtext(9, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\");\n      i0.ɵɵtext(13, \"Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\");\n      i0.ɵɵtext(17, \"Confirme a senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\");\n      i0.ɵɵtext(21, \"Foto:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 6);\n      i0.ɵɵtext(24, \"Cadastrar\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"disabled\", ctx.cadastroForm.invalid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CadastroComponent };","map":{"version":3,"names":["Validators","CadastroComponent","constructor","formBuilder","emailExistente","cadastroForm","group","nome","required","email","senha","senhaConfirmacao","foto","cadastrarUsuario","valid","reset","verificarEmailExistente","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","CadastroComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CadastroComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\possi\\OneDrive\\Área de Trabalho\\login\\login\\src\\app\\cadastro\\cadastro.component.ts","C:\\Users\\possi\\OneDrive\\Área de Trabalho\\login\\login\\src\\app\\cadastro\\cadastro.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent {\n  cadastroForm: FormGroup;\n  emailExistente = false;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.cadastroForm = this.formBuilder.group({\n      nome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      senha: ['', Validators.required],\n      senhaConfirmacao: ['', Validators.required],\n      foto: ['']\n    });\n  }\n\n  cadastrarUsuario() {\n    if (this.cadastroForm.valid) {\n\n      this.cadastroForm.reset();\n    }\n  }\n\n  verificarEmailExistente() {\n\n\n  }\n}\n\n","<h1>Only Chat</h1>\n<form (ngSubmit)=\"cadastrarUsuario()\">\n  <div>\n    <label>Nome:</label>\n    <input type=\"text\" formControlName=\"nome\" required>\n  </div>\n  <div>\n    <label>Email:</label>\n    <input type=\"email\" formControlName=\"email\" required>\n  </div>\n  <div>\n    <label>Senha:</label>\n    <input type=\"password\" formControlName=\"senha\" required>\n  </div>\n  <div>\n    <label>Confirme a senha:</label>\n    <input type=\"password\" formControlName=\"senhaConfirmacao\" required>\n  </div>\n  <div>\n    <label>Foto:</label>\n    <input type=\"file\" formControlName=\"foto\">\n  </div>\n  <button type=\"submit\" [disabled]=\"cadastroForm.invalid\">Cadastrar</button>\n</form>\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAEnE,MAKaC,iBAAiB;EAI5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,cAAc,GAAG,KAAK;IAGpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACzCC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MAChCG,gBAAgB,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MAC3CI,IAAI,EAAE,CAAC,EAAE;KACV,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACR,YAAY,CAACS,KAAK,EAAE;MAE3B,IAAI,CAACT,YAAY,CAACU,KAAK,EAAE;;EAE7B;EAEAC,uBAAuBA,CAAA,GAGvB;;AAxBWf,iBAAiB,C;mBAAjBA,iBAAiB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAjBnB,iBAAiB,C;QAAjBA,iBAAiB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BV,EAAA,CAAAY,cAAA,SAAI;MAAAZ,EAAA,CAAAa,MAAA,gBAAS;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAClBd,EAAA,CAAAY,cAAA,cAAsC;MAAhCZ,EAAA,CAAAe,UAAA,sBAAAC,oDAAA;QAAA,OAAYL,GAAA,CAAAf,gBAAA,EAAkB;MAAA,EAAC;MACnCI,EAAA,CAAAY,cAAA,UAAK;MACIZ,EAAA,CAAAa,MAAA,YAAK;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACpBd,EAAA,CAAAiB,SAAA,eAAmD;MACrDjB,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,UAAK;MACIZ,EAAA,CAAAa,MAAA,aAAM;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACrBd,EAAA,CAAAiB,SAAA,gBAAqD;MACvDjB,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,WAAK;MACIZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACrBd,EAAA,CAAAiB,SAAA,gBAAwD;MAC1DjB,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,WAAK;MACIZ,EAAA,CAAAa,MAAA,yBAAiB;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAChCd,EAAA,CAAAiB,SAAA,gBAAmE;MACrEjB,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,WAAK;MACIZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MACpBd,EAAA,CAAAiB,SAAA,gBAA0C;MAC5CjB,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,iBAAwD;MAAAZ,EAAA,CAAAa,MAAA,iBAAS;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;MAApDd,EAAA,CAAAkB,SAAA,IAAiC;MAAjClB,EAAA,CAAAmB,UAAA,aAAAR,GAAA,CAAAvB,YAAA,CAAAgC,OAAA,CAAiC;;;;;;SDd5CpC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}